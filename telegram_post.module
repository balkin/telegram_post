<?php

/**
 * Implements hook_menu().
 * Setup the module configuration page.
 */
function telegram_post_menu()
{
  $items = array();

  $items['admin/config/services/telegram-post'] = array(
    'title' => t('Telegram item config'),
    'description' => t('Send message to telegram channel'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('telegram_post_config_form'),
    'access arguments' => array('access telegram item'),
    'file' => 'telegram_post_config.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 * Setup module permissions.
 */
function telegram_post_permission()
{
  return array(
    'access telegram item' => array(
      'title' => t('Administer telegram item'),
      'description' => t('Access permission to telegram item'),
    ),
    'telegram send message' => array(
      'title' => t('Telegram send message'),
      'description' => t('Allow user to telegram send message.'),
    ),
  );
}

/**
 * Implements hook_module_implements_alter().
 * Should be the last hook (Or at least after pathauto).
 */
function telegram_post_module_implements_alter(&$implementations, $hook)
{
  $module = basename(__FILE__, '.module');
  if (!empty($implementations[$module])) {
    $group = $implementations[$module];
    unset($implementations[$module]);
    $implementations[$module] = $group;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Add telegram elements to the form
 */
function telegram_post_form_node_form_alter(&$form, &$form_state)
{
  if (empty($form['#node']->type)) {
    return;
  }
  // Check permissions
  if (user_access('telegram send message')) {
    // дополняем форму добавления/редактирования ноды
    form_load_include($form_state, 'forms.inc', 'telegram_post');
    __telegram_post_process_node_form($form);
  }
}

/**
 * Implements hook_node_insert().
 */
function telegram_post_node_insert($node)
{
  __telegram_post_process_node($node);
}

/**
 * Implements hook_node_update().
 */
function telegram_post_node_update($node)
{
  __telegram_post_process_node($node);
}

/**
 * Post the message to telegram
 */
function __telegram_post_process_node($node)
{
  $apikey = variable_get('telegram_post_apikey');
  $channel = variable_get('telegram_post_channel_name');
  $user_access = user_access('telegram send message');

  // Check whether user checked the "Post to telegram" checkbox
  $post_node = isset($node->post_to_telegram) ? $node->post_to_telegram : FALSE;

  if ($apikey && $channel && $user_access && $post_node) {
    global $base_url;
    // Add the title
    $message = $node->title . "\r\n";
    // Add the URL
    $message .= $base_url . '/' . drupal_get_path_alias('node/' . $node->nid);
    // TODO: Template
    $message = urlencode($message);
    __telegram_post_send_message($message, $apikey, $channel);
  }
}

function __telegram_post_send_message($message, $apikey, $channel)
{
  // Make an Telegram API call
  $query = "https://api.telegram.org/bot" . $apikey .
    "/sendMessage?disable_web_page_preview=true&chat_id=" . $channel .
    "&text=" . $message;

  // Use CURL to send the Telegram API call
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $query);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, CURLOPT_HEADER, 0);
  curl_exec($curl);
  curl_close($curl);
}
